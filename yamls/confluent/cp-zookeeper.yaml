---
# Source: cp-zookeeper/templates/jmx-configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: zk-cp-zookeeper-jmx-configmap
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: zk
    heritage: Tiller
data:
  jmx-zookeeper-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    rules:
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+)><>(\\w+)"
      name: "cp_zookeeper_$2"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+)><>(\\w+)"
      name: "cp_zookeeper_$3"
      labels:
        replicaId: "$2"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+)><>(\\w+)"
      name: "cp_zookeeper_$4"
      labels:
        replicaId: "$2"
        memberType: "$3"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+), name3=(\\w+)><>(\\w+)"
      name: "cp_zookeeper_$4_$5"
      labels:
        replicaId: "$2"
        memberType: "$3"
---
# Source: cp-zookeeper/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zk-cp-zookeeper-headless
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: zk
    heritage: Tiller
spec:
  ports:
    - port: 2888
      name: server
    - port: 3888
      name: leader-election
  clusterIP: None
  selector:
    app: cp-zookeeper
    release: zk
---
# Source: cp-zookeeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zk-cp-zookeeper
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: zk
    heritage: Tiller
spec:
  type: NodePort
  ports:
    - port: 2181
      name: client
  selector:
    app: cp-zookeeper
    release: zk
---
# Source: cp-zookeeper/templates/statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: zk-cp-zookeeper
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: zk
    heritage: Tiller
spec:
  serviceName: zk-cp-zookeeper-headless
  podManagementPolicy: OrderedReady
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cp-zookeeper
        release: zk
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - cp-zookeeper
                  - key: "release"
                    operator: In
                    values:
                    - zk
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: prometheus-jmx-exporter
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8"
        command:
        - java
        - -XX:+UnlockExperimentalVMOptions
        - -XX:+UseCGroupMemoryLimitForHeap
        - -XX:MaxRAMFraction=1
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "5556"
        - /etc/jmx-zookeeper/jmx-zookeeper-prometheus.yml
        ports:
        - containerPort: 5556
        resources:
          null
          
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-zookeeper
      - name: cp-zookeeper-server
        image: "confluentinc/cp-zookeeper:5.0.0"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          exec:
            command: ['/bin/bash', '-c', 'echo "ruok" | nc -w 2 -q 2 localhost 2181 | grep imok']
          initialDelaySeconds: 1
          timeoutSeconds: 3
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        - containerPort: 5555
          name: jmx
        resources:
          {}
          
        env:
        - name : KAFKA_HEAP_OPTS
          value: "-Xms512M -Xmx512M"
        - name : KAFKA_JMX_PORT
          value: "5555"
        - name : ZOOKEEPER_TICK_TIME
          value: "2000"
        - name : ZOOKEEPER_SYNC_LIMIT
          value: "5"
        - name : ZOOKEEPER_INIT_LIMIT
          value: "10"
        - name : ZOOKEEPER_MAX_CLIENT_CNXNS
          value: "60"
        - name : ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT
          value: "3"
        - name : ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL
          value: "24"
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name : ZOOKEEPER_SERVERS
          value: "zk-cp-zookeeper-0.zk-cp-zookeeper-headless.default.svc.cluster.local:2888:3888;zk-cp-zookeeper-1.zk-cp-zookeeper-headless.default.svc.cluster.local:2888:3888;zk-cp-zookeeper-2.zk-cp-zookeeper-headless.default.svc.cluster.local:2888:3888"
        # ZOOKEEPER_SERVER_ID is required just to pass cp-zookeeper ensure script for env check,
        # the value(metadata.mame) is not used and will be overwritten in command part
        - name: ZOOKEEPER_SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
        - "bash"
        - "-c"
        - "ZOOKEEPER_SERVER_ID=$((${HOSTNAME##*-}+1)) && /etc/confluent/docker/run"
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper/data
        - name: datalogdir
          mountPath: /var/lib/zookeeper/log
      volumes:
      - name: jmx-config
        configMap:
          name: zk-cp-zookeeper-jmx-configmap
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: rook-ceph-block
      resources:
        requests:
          storage: "5Gi"
  - metadata:
      name: datalogdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: rook-ceph-block
      resources:
        requests:
          storage: "5Gi"
---
# Source: cp-zookeeper/templates/poddisruptionbudget.yaml

